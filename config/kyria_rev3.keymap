/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define MAIN_COMBO_TIMEOUT 24
#define TIGHT_MAIN_COMBO_TIMEOUT 17

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

&lt { quick-tap-ms = <175>; };

/ {
    combos {
        compatible = "zmk,combos";

        dijkstra_esc {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp ESC>;
            key-positions = <20 19>;
            layers = <0>;
        };

        combo_ret {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp RET>;
            key-positions = <19 20 21>;
            layers = <0>;
        };

        combo_rparen {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            layers = <0>;
        };

        combo_lparen {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 14>;
            layers = <0>;
        };

        combo_lbrack {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 26>;
            layers = <0>;
        };

        combo_rbrack {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <37 36>;
            layers = <0>;
        };

        combo_lbrace {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp LEFT_BRACE>;
            key-positions = <2 3>;
            layers = <0>;
        };

        combo_rbrace {
            timeout-ms = <TIGHT_MAIN_COMBO_TIMEOUT>;
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 9>;
            layers = <0>;
        };

        combo_exclaim {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp EXCL>;
            key-positions = <9 10>;
            layers = <0>;
        };

        combo_equals_ {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
            layers = <0 1>;
        };

        combo_dash {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
            layers = <0>;
        };

        combo_symbolic_backspace {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp BSPC>;
            key-positions = <15 16>;
            layers = <1>;
        };

        combo_symbolic_dash {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp MINUS>;
            key-positions = <20 19>;
            layers = <1>;
        };

        combo_underscore {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp UNDERSCORE>;
            key-positions = <4 3>;
            layers = <0>;
        };

        combo_at_the_rate {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp AT>;
            key-positions = <1 2>;
            layers = <0>;
        };

        combo_asterisk {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp ASTERISK>;
            key-positions = <28 27>;
            layers = <0>;
        };

        combo_colon {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp COLON>;
            key-positions = <35 36>;
            layers = <0>;
        };

        combo_cut {
            timeout-ms = <MAIN_COMBO_TIMEOUT>;
            bindings = <&kp LC(X)>;
            key-positions = <31 44>;
            layers = <0>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <32 45>;
        };
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            // R_KEYS

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 38 39 45 46 47 48 49>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            // L_KEYS

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 31 40 41 42 43 44>;
            hold-trigger-on-release;
        };

        Tab_Caps: tab_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Core {
            bindings = <
&kp GRAVE     &kp Q        &kp W        &kp E         &kp R         &kp T                                                          &kp Y        &kp U         &kp I         &kp O        &kp P           &kp BSLH
&kp TAB       &hml LALT A  &hml LGUI S  &hml LSHFT D  &hml LCTRL F  &kp G                                                          &kp H        &hmr RCTRL J  &hmr RSHFT K  &hmr RGUI L  &hmr LALT SEMI  &kp SQT
&kp C_BRI_DN  &kp Z        &kp X        &kp C         &kp V         &kp B        &kp LC(C)  &kp LC(V)  &kp C_VOL_UP  &kp C_VOL_DN  &kp N        &kp M         &kp COMMA     &kp DOT      &kp FSLH        &kp C_BRI_UP
                                        &none         &kp LGUI      &lt 2 SPACE  &sk LSHFT  &kp DEL    &mo 3         &lt 1 BSPC    &key_repeat  &kp LC(BSPC)  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Num {
            bindings = <
&kp GRAVE  &kp AT    &kp HASH  &kp DOLLAR    &kp PERCENT    &kp CARET                                               &trans   &kp N4  &kp N5  &kp N6  &trans     &trans
&trans     &kp LALT  &kp LGUI  &kp LSHFT     &kp LCTRL      &kp QUESTION                                            &kp N0   &kp N1  &kp N2  &kp N3  &kp UNDER  &trans
&trans     &trans    &trans    &kp ASTERISK  &kp AMPERSAND  &trans        &trans            &trans  &trans  &trans  &kp DOT  &kp N7  &kp N8  &kp N9  &trans     &trans
                               &trans        &kp LESS_THAN  &kp SPACE     &kp GREATER_THAN  &trans  &trans  &trans  &trans   &trans  &trans
            >;
        };

        Nav {
            bindings = <
&trans  &trans    &trans     &kp C_VOL_DN  &kp C_VOL_UP  &trans                                  &kp HOME  &kp END     &kp PG_UP  &kp PG_DN   &kp INS     &trans
&trans  &kp LALT  &kp LGUI   &kp LSHFT     &kp LCTRL     &trans                                  &kp LEFT  &kp DOWN    &kp UP     &kp RIGHT   &kp DEL     &trans
&trans  &trans    &kp LC(X)  &kp LC(C)     &kp LC(V)     &trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREV  &kp C_PP   &kp C_MUTE  &kp C_NEXT  &trans
                             &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans
            >;
        };

        Fn {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                                  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                                  &trans  &kp RCTRL  &kp LSHFT  &kp LGUI  &kp LALT  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans    &trans    &trans
                         &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
