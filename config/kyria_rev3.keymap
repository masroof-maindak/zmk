/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

&lt { quick-tap-ms = <175>; };

/ {
    combos {
        compatible = "zmk,combos";

        dijkstra_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <20 19>;
            layers = <0>;
        };

        bumpy_enter {
            bindings = <&kp ENTER>;
            key-positions = <16 19>;
            layers = <0>;
        };

        rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            layers = <0>;
        };

        lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 14>;
            layers = <0>;
        };

        rbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 22>;
            layers = <0>;
        };

        lbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
            layers = <0>;
        };

        exclaim {
            bindings = <&kp EXCL>;
            key-positions = <9 10>;
            layers = <0>;
        };

        equals_ {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
            layers = <0 1>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
            layers = <0>;
        };

        symbolic_backspace {
            bindings = <&kp BSPC>;
            key-positions = <15 16>;
            layers = <1>;
        };

        symbolic_dash {
            bindings = <&kp MINUS>;
            key-positions = <20 19>;
            layers = <1>;
        };
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 23 22 21 18 19 20 21 22 23 34 35 36 37 38 39 47 48 49 32 33 45 46>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 31 40 41 42 43 44>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        tab_capsW: tab_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        core {
            bindings = <
&kp GRAVE             &kp Q            &kp W        &kp E         &kp R          &kp T                                                                       &kp Y       &kp U                 &kp I               &kp O        &kp P               &kp BSLH
&tab_capsW            &hml LEFT_ALT A  &hml LGUI S  &hml LSHFT D  &hml LCTRL F   &kp G                                                                       &kp H       &hmr RIGHT_CONTROL J  &hmr RIGHT_SHIFT K  &hmr RGUI L  &hmr LEFT_ALT SEMI  &kp SQT
&kp C_BRIGHTNESS_DEC  &kp Z            &kp X        &kp C         &kp V          &kp B        &kp LC(C)       &kp LC(V)  &kp K_VOLUME_UP  &kp K_VOLUME_DOWN  &kp N       &kp M                 &kp COMMA           &kp DOT      &kp FSLH            &kp C_BRIGHTNESS_INC
                                                    &trans        &kp LEFT_META  &lt 2 SPACE  &sk LEFT_SHIFT  &kp DEL    &mo 3            &key_repeat        &lt 1 BSPC  &kp RALT              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_num {
            bindings = <
&kp GRAVE  &kp AT        &kp HASH  &kp DOLLAR    &kp PERCENT    &kp CARET                                               &trans   &kp N4  &kp N5  &kp N6  &trans     &trans
&trans     &kp LEFT_ALT  &kp LGUI  &kp LSHFT     &kp LCTRL      &kp QUESTION                                            &kp N0   &kp N1  &kp N2  &kp N3  &kp UNDER  &trans
&trans     &trans        &trans    &kp ASTERISK  &kp AMPERSAND  &trans        &trans            &trans  &trans  &trans  &kp DOT  &kp N7  &kp N8  &kp N9  &trans     &trans
                                   &trans        &kp LESS_THAN  &kp SPACE     &kp GREATER_THAN  &trans  &trans  &trans  &trans   &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans        &trans        &trans     &trans     &trans                                  &kp HOME    &kp END           &kp PG_UP     &kp PAGE_DOWN  &kp INS  &trans
&trans  &kp LEFT_ALT  &kp LEFT_GUI  &kp LSHFT  &kp LCTRL  &trans                                  &kp LEFT    &kp DOWN          &kp UP_ARROW  &kp RIGHT      &kp DEL  &trans
&trans  &trans        &trans        &trans     &trans     &trans  &trans  &trans  &trans  &trans  &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT    &kp K_MUTE     &trans   &trans
                                    &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans      &trans            &trans
            >;
        };

        fn {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                                  &trans  &trans             &trans     &trans        &trans        &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                                  &trans  &kp RIGHT_CONTROL  &kp LSHFT  &kp LEFT_GUI  &kp LEFT_ALT  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans             &trans     &trans        &trans        &trans
                         &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};

